%h1 Edit Item:
- semantic_form_for @item, :url => resource_path do |f|
  - f.inputs do
    = f.object.name
    = f.input :item_rank
    = f.input :rarity
    
  - f.inputs :name => 'Levels' do |ff|
    = f.input :level
    = f.input :item_world_level_max
    = f.input :item_world_level
    
  - f.inputs :name => 'Class/Appearance' do |ff|
    = f.input :weapon_sprite_id
    = f.input :weapon_colour
    = f.input :rarity_badge
    
  - f.inputs :name => 'Misc.' do |ff|
    = f.input :population
    = f.input :mv
    = f.input :jmp
    = f.input :critical_chance
    = f.input :range
    
  - f.inputs :name => 'Stats', :for => [:stats,f.object.stats] do |ff|
    %p Maybe be overridden when stats are recalculated (specialists added/removed, level up, etc.)
    = render 'stats/edit', :form => ff
    
  - f.inputs :name => 'Base stats', :for => [:base_stats,f.object.base_stats] do |ff|
    %p Stats without specialists, Item General bonuses, etc.
    = render 'stats/edit', :form => ff
    
  - begin
    - f.inputs :name => "Unknown values" do |ff|
      = unknown_fields_for(f)
  - rescue #ugh ugly hack to stop things from breaking due to bugs with lazy loader
    = ""
    
  - f.buttons do
    = f.commit_button